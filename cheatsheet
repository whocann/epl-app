using com.epl.CatalogService from './cat-service';

annotate CatalogService.Matches with @(
  UI:{
    Identification: [{ Value: '{i18n>matches}' }],
    SelectionFields: [ 'matchDate', 'homeTeam_ID', 'awayTeam_ID' ],
    LineItem: [
			{ Value: matchDate, Label: '{i18n>matchDate}' },            
      { Value: homeTeam.name, Label: '{i18n>homeTeam}' },  
      { Value: homeTeamScore },
      { Value: ':' },
      { Value: awayTeamScore },
      { Value: awayTeam.name, Label: '{i18n>awayTeam}' }
    ]
  }
){
  matchDate @title:'{i18n>matchDate}';
  homeTeam_ID @title:'{i18n>homeTeam}';
  awayTeam_ID @title:'{i18n>awayTeam}';
	homeTeam @(
		Common.Text: { $value: homeTeam.name, "@UI.TextArrangement": #TextOnly },
		Common.ValueList.entity:'CatalogService.Teams',
    Common.ValueList.Label: 'aaaa',
    // Common.ValueList.CollectionPath: 'CatalogService.Teams',
		Common.ValueList.Parameters:[
			 { $Type:'Common.ValueListParameterInOut', LocalDataProperty: homeTeam_ID, ValueListProperty:'ID' },
      { $Type:'Common.ValueListParameterDisplayOnly', ValueListProperty:'name' },
		],
	){
    ID @title: '{i18n>homeTeam}';
  };
  awayTeam @(
    ValueList.entity:'CatalogService.Teams'
  );
};

<Annotations Target="com.epl.CatalogService.Matches/homeTeam_ID">
<Annotation Term="Common.ValueList">
<Record Type="Common.ValueListType">
<PropertyValue Property="Label" String="Teams"/>
<PropertyValue Property="CollectionPath" String="Teams"/>
<PropertyValue Property="Parameters">
<Collection>
<Record Type="Common.ValueListParameterInOut">
<PropertyValue Property="LocalDataProperty" PropertyPath="homeTeam_ID"/>
<PropertyValue Property="ValueListProperty" String="ID"/>
</Record>
<Record Type="Common.ValueListParameterDisplayOnly">
<PropertyValue Property="ValueListProperty" String="name"/>
</Record>
</Collection>
</PropertyValue>
</Record>
</Annotation>


	homeTeam @(
    ValueList.entity:'CatalogService.Teams'
	){
    ID @title: '{i18n>homeTeam}';
  };
  awayTeam @(
    ValueList.entity:'CatalogService.Teams2'
  );
  
  
  
  @UI.HiddenFilter


    
    @sap.label: 'aaaaa'
  @sap.display.format: 'Date'







  
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Preview ‒ List of CatalogService.Matches</title>
    <script src="https://sapui5.hana.ondemand.com/resources/sap-ui-core.js"
        data-sap-ui-libs="sap.m, sap.ushell, sap.collaboration, sap.ui.layout" data-sap-ui-compatVersion="edge"
        data-sap-ui-theme="sap_belize" data-sap-ui-frameOptions="allow"></script>
    <script>
        sap.ui.getCore().attachInit(() => {
            sap.ui.require(["sap/fe/AppComponent", "sap/m/Shell", "sap/ui/core/ComponentContainer"], function (AppComponent, Shell, ComponentContainer) {
                var GenericComponent = AppComponent.extend("preview.Component", {
                    metadata: { manifest: {
  "_version": "1.8.0",
  "sap.app": {
    "id": "preview",
    "type": "application",
    "title": "Preview ‒ List of CatalogService.Matches",
    "description": "Preview Application",
    "dataSources": {
      "mainService": {
        "uri": "/catalog/",
        "type": "OData",
        "settings": {
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui5": {
    "dependencies": {
      "libs": {
        "sap.fe": {}
      }
    },
    "models": {
      "": {
        "dataSource": "mainService",
        "settings": {
          "synchronizationMode": "None",
          "operationMode": "Server",
          "autoExpandSelect": true,
          "earlyRequests": true,
          "groupProperties": {
            "default": {
              "submit": "Auto"
            }
          }
        }
      }
    },
    "routing": {
      "routes": [
        {
          "name": "MatchesListRoute",
          "target": "MatchesListTarget",
          "pattern": ":?query:"
        },
        {
          "name": "MatchesDetailsRoute",
          "target": "MatchesDetailsTarget",
          "pattern": "Matches({key}):?query:"
        },
        {
          "name": "homeTeamRoute",
          "target": "homeTeamTarget",
          "pattern": "Matches({key}/homeTeam({key2}):?query:"
        },
        {
          "name": "awayTeamRoute",
          "target": "awayTeamTarget",
          "pattern": "Matches({key}/awayTeam({key2}):?query:"
        }
      ],
      "targets": {
        "MatchesListTarget": {
          "type": "Component",
          "id": "MatchesListTarget",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "entitySet": "Matches",
              "navigation": {
                "Matches": {
                  "detail": {
                    "route": "MatchesDetailsRoute"
                  }
                }
              }
            }
          }
        },
        "MatchesDetailsTarget": {
          "type": "Component",
          "id": "MatchesDetailsTarget",
          "name": "sap.fe.templates.ObjectPage",
          "options": {
            "settings": {
              "entitySet": "Matches",
              "navigation": {
                "homeTeam": {
                  "detail": {
                    "route": "homeTeamRoute"
                  }
                },
                "awayTeam": {
                  "detail": {
                    "route": "awayTeamRoute"
                  }
                }
              }
            }
          }
        },
        "homeTeamTarget": {
          "type": "Component",
          "id": "homeTeamTarget",
          "name": "sap.fe.templates.ObjectPage",
          "options": {
            "settings": {
              "entitySet": "Teams"
            }
          }
        },
        "awayTeamTarget": {
          "type": "Component",
          "id": "awayTeamTarget",
          "name": "sap.fe.templates.ObjectPage",
          "options": {
            "settings": {
              "entitySet": "Teams"
            }
          }
        }
      }
    }
  },
  "contentDensities": {
    "compact": true,
    "cozy": true
  },
  "sap.ui": {
    "technology": "UI5",
    "fullWidth": true
  },
  "sap.fiori": {
    "registrationIds": [],
    "archeType": "transactional"
  }
} }
                });
                new Shell({
                    app: new ComponentContainer({
                        height: "100%",
                        component: new GenericComponent({
                            id: "preview.Component"
                        }),
                        async: true
                    }),
                    appWidthLimited: false
                }).placeAt("content");
            })
        })
    </script>
</head>
<body class="sapUiBody" id="content"></body>
</html>
